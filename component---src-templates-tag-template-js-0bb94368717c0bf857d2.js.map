{"version":3,"sources":["webpack:///./src/components/TagPreview/TagPreview.js","webpack:///./src/templates/tag-template.js","webpack:///./src/styles/component-styles/index-styles.js","webpack:///./src/components/header.js","webpack:///./src/layouts/index.js","webpack:///./src/components/Meta/Meta.js"],"names":["TagPreview","_ref","post","react_default","a","createElement","gatsby_link_default","to","frontmatter","path","title","style","color","fontFamily","fontSize","date","className","borderLeft","fontWeight","marginTop","paddingLeft","timeToRead","description","excerpt","__webpack_require__","d","__webpack_exports__","query","Tags","props","posts","data","allMarkdownRemark","edges","tag","pageContext","layouts","Meta","gatsby_browser_entry","map","i","node","components_TagPreview_TagPreview","key","styles","indexBody","margin","paddingTop","maxWidth","flexDirection","justifyContent","height","indexChildWrapper","display","padding","readmoreButton","burgerPiece","borderRadius","marginBottom","width","Header","siteTitle","backgroundColor","borderBottom","boxShadow","background","react_media","minWidth","matches","textAlign","textDecoration","right","Object","assign","alignSelf","Layout","children","Helmet_default","href","rel","header","flex","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","meta","name","content","keywords","property","pathname","url","thumbnail","lang"],"mappings":"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","file":"component---src-templates-tag-template-js-0bb94368717c0bf857d2.js","sourcesContent":["/**\r\n * Display previews for listing posts by tag\r\n */\r\n\r\nimport React from 'react'\r\nimport Link from 'gatsby-link'\r\nimport styles from './TagPreview.module.scss'\r\n\r\nconst TagPreview = ({ post }) => (\r\n  <div>\r\n    <Link to={ post.frontmatter.path }><h1>{post.frontmatter.title}</h1></Link>\r\n    <h2\r\n      style={{\r\n        color: '#333',\r\n        fontFamily: 'Montserrat',\r\n        fontSize: '0.9rem',\r\n      }}\r\n    >\r\n      {post.frontmatter.date}\r\n    </h2>\r\n    <h2\r\n      className=\"bold\"\r\n      style={{\r\n        borderLeft: '2px solid #222',\r\n        color: '#333',\r\n        fontSize: '0.9rem',\r\n        fontWeight: 700,\r\n        marginTop: '0rem',\r\n        paddingLeft: '0.5rem',\r\n      }}\r\n    >\r\n      {post.timeToRead} {post.timeToRead === 1 ? 'minute' : 'minutes'}\r\n    </h2>\r\n    <p>{post.frontmatter.description || post.excerpt}</p>\r\n  </div>\r\n)\r\n\r\nexport default TagPreview\r\n","import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\n\r\nimport Layout from '../layouts'\r\nimport TagPreview from '../components/TagPreview/TagPreview';\r\nimport Meta from '../components/Meta/Meta';\r\n\r\nconst Tags = props => {\r\n  const posts = props.data.allMarkdownRemark.edges\r\n  const { tag } = props.pageContext\r\n\r\n  return (\r\n    <Layout>\r\n\r\n      <Meta\r\n          title={ `slim - All Tags` }\r\n          description={ `Display all tags on blog` }\r\n        />\r\n\r\n      <div>\r\n        <h1>{`Available posts in '${tag}'`}</h1>\r\n        <h3><Link to={ `/tags` }>Go back to all tags.</Link></h3>\r\n        <div className=\"tags\">\r\n          {posts.map(({ node }, i) => (\r\n            <TagPreview post={ node } key={ i } />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const query = graphql`\r\n  query Tagsquery($tag: String!) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { eq: $tag } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 250)\r\n          id\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            path\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            description\r\n            tags\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","const indexBody = {\r\n    margin: '0 auto',\r\n    paddingTop: '3rem',\r\n    maxWidth: 980,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    height: '100%',\r\n};\r\n\r\nconst indexChildWrapper = {\r\n    margin: '0 auto',\r\n    maxWidth: 980,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    height: '100%',\r\n    padding: '25px',\r\n}\r\n\r\nconst readmoreButton = {\r\n    fontFamily: 'Montserrat',\r\n    fontWeight: 600\r\n}\r\n\r\nexport const styles = {\r\n    indexBody: indexBody,\r\n    indexChildWrapper: indexChildWrapper,\r\n    readmoreButton: readmoreButton\r\n}","import React from 'react'\r\nimport Link from 'gatsby-link'\r\nimport Media from 'react-media'\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <div\r\n    className=\"header header-fixed header-clear\"\r\n    style={{\r\n      backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n      borderBottom: '1px solid #e1e1e1',\r\n      boxShadow: '0 0.2rem 1.25rem 0 rgba(27,30,36,.07)',\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        background: 'transparent',\r\n        margin: '0 auto',\r\n        padding: '0 1.0875rem',\r\n      }}\r\n    >\r\n    \r\n      <Media query={{ minWidth: 848 }}>\r\n        {(\r\n          matches\r\n        ) => matches ? (\r\n          <div className=\"header-nav\" style={{ background: 'transparent' }}>\r\n            <div className=\"nav-left\">\r\n              <div className=\"nav-item\">\r\n                <h1\r\n                  style={{\r\n                    margin: 0,\r\n                    textAlign: 'center',\r\n                    background: 'transparent',\r\n                  }}\r\n                >\r\n                  <Link\r\n                    className=\"header-brand\"\r\n                    to=\"/\"\r\n                    style={{\r\n                      color: '#222',\r\n                      textDecoration: 'none',\r\n                    }}\r\n                  >\r\n                    {siteTitle}\r\n                  </Link>\r\n                </h1>\r\n              </div>\r\n            </div>\r\n            <div className=\"nav-center\" />\r\n            <div className=\"nav-right\" style={{ display: 'flex' }}>\r\n              <div className=\"nav-item\">\r\n                <div\r\n                  className=\"burger\"\r\n                  style={{\r\n                    background: 'transparent',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    paddingTop: '3px',\r\n                    right: 0,\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{...burgerPiece, ...{ alignSelf:'flex-end', width: '15px' }}}\r\n                  />\r\n                  <div\r\n                    style={burgerPiece}\r\n                  />\r\n                  <div\r\n                    style={{...burgerPiece, ...{ width: '15px' }}}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"header-nav\" style={{ background: 'transparent' }}>\r\n            <div className=\"nav-center\">\r\n              <div className=\"nav-item\">\r\n                <h1\r\n                  style={{\r\n                    margin: 0,\r\n                    textAlign: 'center',\r\n                    background: 'transparent',\r\n                  }}\r\n                >\r\n                  <Link\r\n                    className=\"header-brand\"\r\n                    to=\"/\"\r\n                    style={{\r\n                      color: '#222',\r\n                      textDecoration: 'none',\r\n                    }}\r\n                  >\r\n                    {siteTitle}\r\n                  </Link>\r\n                </h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n      </Media>\r\n      \r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst burgerPiece = {\r\n  height: '4px',\r\n  borderRadius: '4px',\r\n  marginTop: '.15rem',\r\n  marginBottom: '.15rem',\r\n  paddingTop: '3px',\r\n  width: '30px',\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport Media from 'react-media' // Listens for matches to CSS media query and renders components\r\n\r\nimport Header from '../components/header'\r\n\r\nimport { styles } from '../styles/component-styles/index-styles'\r\n\r\nconst Layout = ({ children, data }) => (\r\n  <div>\r\n    <Helmet>\r\n      <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" />\r\n    </Helmet>\r\n    <Header siteTitle=\"slim\" />\r\n\r\n    <Media query={{ maxWidth: 848 }}>\r\n      {(\r\n        matches // Inline function for checking if rules match above (less than 848px)\r\n      ) =>\r\n        matches ? (\r\n          <div\r\n            style={{ ...styles.indexBody, ...{ paddingTop: '7rem' }}}\r\n          >\r\n            <div\r\n              style={ styles.indexChildWrapper }\r\n            >\r\n              <div style={{ flex: 1, maxWidth: '100%' }}>{children}</div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{ ...styles.indexBody, ...{ paddingTop: '7rem' }}}\r\n          >\r\n            <div\r\n              style={ styles.indexChildWrapper }\r\n            >\r\n              { children }\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    </Media>\r\n  </div>\r\n)\r\n\r\n/* Explicitly define our prop types */\r\n// Layout.propTypes = {\r\n//   children: PropTypes.array,\r\n// }\r\n\r\nexport default Layout\r\n","/**\r\n * Site metadata for SEO\r\n */\r\nimport React from 'react'\r\nimport Helmet from 'react-helmet'\r\n\r\nconst Meta = props => {\r\n  return (\r\n    <Helmet\r\n      title={props.title}\r\n      meta={[\r\n        { name: 'title', content: props.title },\r\n\r\n        { name: 'description', content: props.description },\r\n        { name: 'keywords', content: 'stanley, lim, blog, ' + props.keywords },\r\n        {\r\n          property: 'og:title',\r\n          content: props.title,\r\n        },\r\n        {\r\n          property: 'og:url',\r\n          content: props.pathname ? props.url + props.pathname : props.url,\r\n        },\r\n\r\n        {\r\n          property: 'og:image',\r\n          content: props.thumbnail && props.thumbnail,\r\n        },\r\n        {\r\n          property: 'og:image:secure_url',\r\n          content: props.thumbnail && props.thumbnail,\r\n        },\r\n\r\n        {\r\n          property: 'og:description',\r\n          content: props.description,\r\n        },\r\n\r\n        {\r\n          property: 'og:image:width',\r\n          content: '1200',\r\n        },\r\n\r\n        {\r\n          property: 'og:image:height',\r\n          content: '630',\r\n        },\r\n        {\r\n          property: 'og:locale',\r\n          content: 'en',\r\n        },\r\n        { name: 'twitter:card', content: 'summary_large_image' },\r\n\r\n        { name: 'twitter:title', content: props.title },\r\n\r\n        {\r\n          name: 'twitter:description',\r\n          content: props.description || '',\r\n        },\r\n        // {\r\n        //   name: 'twitter:image',\r\n        //   content: props.thumbnail && props.thumbnail,\r\n        // },\r\n        { property: 'og:type', content: 'website' },\r\n        { name: 'robots', content: 'index, follow' },\r\n\r\n        { name: 'twitter:creator', content: '@hudididudidi' },\r\n        { property: 'og:site_name', content: 'slim blog' },\r\n        { name: 'viewport', content: 'width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0' }\r\n      ]}\r\n    >\r\n      <html lang=\"en\" />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default Meta"],"sourceRoot":""}