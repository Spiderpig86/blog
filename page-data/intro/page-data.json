{"componentChunkName":"component---src-templates-post-template-js","path":"/intro","result":{"data":{"markdownRemark":{"html":"<p><em>So, here we go.</em> After months of delaying this blog, I finally decided to put on my big boy pants to actually get started. Even though this is the last day of break at the time I'm writing this, I still consider it a personal win that I even remembered.</p>\n<p>And this is what this blog is going to be about; a list of personal wins, losses, and my various views on tech and whether if french fries really does go with soft serve *<em>cough</em>* you guys know who you are *<em>cough</em>*.</p>\n<h3>The Tech</h3>\n<p>Now having no prior experience with maintaining a blog of any sort, I had literally no idea how the hell I should get started. Naturally, I ended up going through a few iterations before I ended up with this.</p>\n<h4>v1: The Static Site</h4>\n<p>This is as basic as it gets. In a nutshell, this involves having a one-page layout where new posts were updated manually. The rest of the functionality like filtering posts would just be powered by basic JavaScript or even jQuery.</p>\n<p>Why this sucked:</p>\n<ul>\n<li>Posts would have to be written in HTML (nasty)</li>\n<li>The development would be way more tedious</li>\n<li><strong>Not futureproof</strong></li>\n</ul>\n<h4>v2: Gatsby + React</h4>\n<p>Now, the other options I considered were using WordPress and Hexo (a blog framework for Node.js). Both are great and all, but WordPress seemed to be a bit too limited in terms of the level of control I have over this and Hexo albeit seemed to fit perfectly for this project, it really was limited to just making blogs without any purpose beyond that.</p>\n<p>Then comes Gatsby -- the static site generator, not the one who got shot ðŸ˜¢. Gatsby is powered by <a href=\"https://reactjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">React</a>, <a href=\"https://webpack.js.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Webpack</a> and <a href=\"https://graphql.org/\" target=\"_blank\" rel=\"noopener noreferrer\">GraphQL</a> under the hood which allows it to be easily converted to a PWA and use a <em>shiny</em> new query language for the backend. Although there is a larger learning curve, this allows developers to easily leverage its expansive library of plugins. </p>\n<h4>Limitations</h4>\n<p>As of now, much of the blog is done in terms of features. However, there is still that annoying issue where links won't actually take you to the correct section of the blog.</p>\n<h3>Coding Problems</h3>\n<p>What would a tech blog be without any <code class=\"language-text\">code</code>? In short, I'll include any problems I stumble upon that I find quite interesting. Now I may or may not solve it in the most efficient way, so feel free to drop a more optimized solution in the comments section down below <em>(holy f%ck I sound like a typical YouTuber)</em>.</p>\n<h3>Cool Tech</h3>\n<p>If there's cool tech out there ðŸ‘€, I may or may not write about it. In short, I personally believe that <a href=\"https://webassembly.org/\" target=\"_blank\" rel=\"noopener noreferrer\">WebAssembly</a> will have a great future in terms of highly performant web applications. </p>\n<p><a href=\"https://imgflip.com/i/2s6506\"><img src=\"https://i.imgflip.com/2s6506.jpg\" title=\"made at imgflip.com\"/></a></p>\n<h3>Personal Development</h3>\n<p>Over the past few months, I've decided that I wanted to <strong>get my shit together</strong>. Don't get me wrong, spending nearly 300 hours nuking other civs to oblivion is fun and all, but sometimes you just gotta put on your big boy pants if you want to reach your goals. I am not a strong proponent of work-life balance, but rather a concept of work-life harmony <em>ooo sounds like a great idea for another blog post</em>. </p>\n<p>So before I ramble on, welcome to the blog ðŸ˜„.</p>","timeToRead":3,"fields":{"slug":"/posts/2019-2-1-intro/"},"frontmatter":{"date":"February 01, 2019","path":"/intro","tags":["first post","about"],"title":"intro","image":null,"description":null}},"site":{"siteMetadata":{"siteUrl":"https://spiderpig86.github.io"}}},"pageContext":{"slug":"/posts/2019-2-1-intro/","prev":{"node":{"excerpt":"Markdown: SyntaxMarkdown: SyntaxOverviewPhilosophyBlock ElementsParagraphs and Line BreaksHeadersBlockquotesListsCode BlocksSpan ElementsLinksEmphasisCodeNote: This document is itself written using Markdown; you\ncan see the source for it by addingâ€¦","html":"<h1>Markdown: Syntax</h1>\n<ul>\n<li>\n<p><a href=\"#markdown-syntax\">Markdown: Syntax</a></p>\n<ul>\n<li><a href=\"#overview\">Overview</a></li>\n<li><a href=\"#philosophy\">Philosophy</a></li>\n<li><a href=\"#block-elements\">Block Elements</a></li>\n<li><a href=\"#paragraphs-and-line-breaks\">Paragraphs and Line Breaks</a></li>\n<li><a href=\"#headers\">Headers</a></li>\n<li><a href=\"#blockquotes\">Blockquotes</a></li>\n<li><a href=\"#lists\">Lists</a></li>\n<li><a href=\"#code-blocks\">Code Blocks</a></li>\n<li><a href=\"#span-elements\">Span Elements</a></li>\n<li><a href=\"#links\">Links</a></li>\n<li><a href=\"#emphasis\">Emphasis</a></li>\n<li><a href=\"#code\">Code</a></li>\n</ul>\n</li>\n</ul>\n<p><strong>Note:</strong> This document is itself written using Markdown; you\ncan <a href=\"/blog/projects/markdown/syntax.text\">see the source for it by adding '.text' to the URL</a>.</p>\n<hr>\n<h2>Overview</h2>\n<h3>Philosophy</h3>\n<p>Markdown is intended to be as easy-to-read and easy-to-write as is feasible.</p>\n<p>Readability, however, is emphasized above all else. A Markdown-formatted\ndocument should be publishable as-is, as plain text, without looking\nlike it's been marked up with tags or formatting instructions. While\nMarkdown's syntax has been influenced by several existing text-to-HTML\nfilters -- including <a href=\"http://docutils.sourceforge.net/mirror/setext.html\" target=\"_blank\" rel=\"noopener noreferrer\">Setext</a>, <a href=\"http://www.aaronsw.com/2002/atx/\" target=\"_blank\" rel=\"noopener noreferrer\">atx</a>, <a href=\"http://textism.com/tools/textile/\" target=\"_blank\" rel=\"noopener noreferrer\">Textile</a>, <a href=\"http://docutils.sourceforge.net/rst.html\" target=\"_blank\" rel=\"noopener noreferrer\">reStructuredText</a>,\n<a href=\"http://www.triptico.com/software/grutatxt.html\" target=\"_blank\" rel=\"noopener noreferrer\">Grutatext</a>, and <a href=\"http://ettext.taint.org/doc/\" target=\"_blank\" rel=\"noopener noreferrer\">EtText</a> -- the single biggest source of\ninspiration for Markdown's syntax is the format of plain text email.</p>\n<h2>Block Elements</h2>\n<h3>Paragraphs and Line Breaks</h3>\n<p>A paragraph is simply one or more consecutive lines of text, separated\nby one or more blank lines. (A blank line is any line that looks like a\nblank line -- a line containing nothing but spaces or tabs is considered\nblank.) Normal paragraphs should not be indented with spaces or tabs.</p>\n<p>The implication of the \"one or more consecutive lines of text\" rule is\nthat Markdown supports \"hard-wrapped\" text paragraphs. This differs\nsignificantly from most other text-to-HTML formatters (including Movable\nType's \"Convert Line Breaks\" option) which translate every line break\ncharacter in a paragraph into a <code class=\"language-text\">&lt;br /&gt;</code> tag.</p>\n<p>When you <em>do</em> want to insert a <code class=\"language-text\">&lt;br /&gt;</code> break tag using Markdown, you\nend a line with two or more spaces, then type return.</p>\n<h3>Headers</h3>\n<p>Markdown supports two styles of headers, [Setext][1] and [atx][2].</p>\n<p>Optionally, you may \"close\" atx-style headers. This is purely\ncosmetic -- you can use this if you think it looks better. The\nclosing hashes don't even need to match the number of hashes\nused to open the header. (The number of opening hashes\ndetermines the header level.)</p>\n<h3>Blockquotes</h3>\n<p>Markdown uses email-style <code class=\"language-text\">&gt;</code> characters for blockquoting. If you're\nfamiliar with quoting passages of text in an email message, then you\nknow how to create a blockquote in Markdown. It looks best if you hard\nwrap the text and put a <code class=\"language-text\">&gt;</code> before every line:</p>\n<blockquote>\n<p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\nconsectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\nVestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>\n<p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\nid sem consectetuer libero luctus adipiscing.</p>\n</blockquote>\n<p>Markdown allows you to be lazy and only put the <code class=\"language-text\">&gt;</code> before the first\nline of a hard-wrapped paragraph:</p>\n<blockquote>\n<p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\nconsectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\nVestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>\n</blockquote>\n<blockquote>\n<p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\nid sem consectetuer libero luctus adipiscing.</p>\n</blockquote>\n<p>Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by\nadding additional levels of <code class=\"language-text\">&gt;</code>:</p>\n<blockquote>\n<p>This is the first level of quoting.</p>\n<blockquote>\n<p>This is nested blockquote.</p>\n</blockquote>\n<p>Back to the first level.</p>\n</blockquote>\n<p>Blockquotes can contain other Markdown elements, including headers, lists,\nand code blocks:</p>\n<blockquote>\n<h2>This is a header.</h2>\n<ol>\n<li>This is the first list item.</li>\n<li>This is the second list item.</li>\n</ol>\n<p>Here's some example code:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">return shell_exec(&quot;echo $input | $markdown_script&quot;);</code></pre></div>\n</blockquote>\n<p>Any decent text editor should make email-style quoting easy. For\nexample, with BBEdit, you can make a selection and choose Increase\nQuote Level from the Text menu.</p>\n<h3>Lists</h3>\n<p>Markdown supports ordered (numbered) and unordered (bulleted) lists.</p>\n<p>Unordered lists use asterisks, pluses, and hyphens -- interchangably\n-- as list markers:</p>\n<ul>\n<li>Red</li>\n<li>Green</li>\n<li>Blue</li>\n</ul>\n<p>is equivalent to:</p>\n<ul>\n<li>Red</li>\n<li>Green</li>\n<li>Blue</li>\n</ul>\n<p>and:</p>\n<ul>\n<li>Red</li>\n<li>Green</li>\n<li>Blue</li>\n</ul>\n<p>Ordered lists use numbers followed by periods:</p>\n<ol>\n<li>Bird</li>\n<li>McHale</li>\n<li>Parish</li>\n</ol>\n<p>It's important to note that the actual numbers you use to mark the\nlist have no effect on the HTML output Markdown produces. The HTML\nMarkdown produces from the above list is:</p>\n<p>If you instead wrote the list in Markdown like this:</p>\n<ol>\n<li>Bird</li>\n<li>McHale</li>\n<li>Parish</li>\n</ol>\n<p>or even:</p>\n<ol start=\"3\">\n<li>Bird</li>\n<li>McHale</li>\n<li>Parish</li>\n</ol>\n<p>you'd get the exact same HTML output. The point is, if you want to,\nyou can use ordinal numbers in your ordered Markdown lists, so that\nthe numbers in your source match the numbers in your published HTML.\nBut if you want to be lazy, you don't have to.</p>\n<p>To make lists look nice, you can wrap items with hanging indents:</p>\n<ul>\n<li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\nAliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\nviverra nec, fringilla in, laoreet vitae, risus.</li>\n<li>Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\nSuspendisse id sem consectetuer libero luctus adipiscing.</li>\n</ul>\n<p>But if you want to be lazy, you don't have to:</p>\n<ul>\n<li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\nAliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\nviverra nec, fringilla in, laoreet vitae, risus.</li>\n<li>Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\nSuspendisse id sem consectetuer libero luctus adipiscing.</li>\n</ul>\n<p>List items may consist of multiple paragraphs. Each subsequent\nparagraph in a list item must be indented by either 4 spaces\nor one tab:</p>\n<ol>\n<li>\n<p>This is a list item with two paragraphs. Lorem ipsum dolor\nsit amet, consectetuer adipiscing elit. Aliquam hendrerit\nmi posuere lectus.</p>\n<p>Vestibulum enim wisi, viverra nec, fringilla in, laoreet\nvitae, risus. Donec sit amet nisl. Aliquam semper ipsum\nsit amet velit.</p>\n</li>\n<li>\n<p>Suspendisse id sem consectetuer libero luctus adipiscing.</p>\n</li>\n</ol>\n<p>It looks nice if you indent every line of the subsequent\nparagraphs, but here again, Markdown will allow you to be\nlazy:</p>\n<ul>\n<li>\n<p>This is a list item with two paragraphs.</p>\n<p>This is the second paragraph in the list item. You're\nonly required to indent the first line. Lorem ipsum dolor\nsit amet, consectetuer adipiscing elit.</p>\n</li>\n<li>\n<p>Another item in the same list.</p>\n</li>\n</ul>\n<p>To put a blockquote within a list item, the blockquote's <code class=\"language-text\">&gt;</code>\ndelimiters need to be indented:</p>\n<ul>\n<li>\n<p>A list item with a blockquote:</p>\n<blockquote>\n<p>This is a blockquote\ninside a list item.</p>\n</blockquote>\n</li>\n</ul>\n<p>To put a code block within a list item, the code block needs\nto be indented <em>twice</em> -- 8 spaces or two tabs:</p>\n<ul>\n<li>\n<p>A list item with a code block:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;code goes here&gt;</code></pre></div>\n</li>\n</ul>\n<h3>Code Blocks</h3>\n<p>Pre-formatted code blocks are used for writing about programming or\nmarkup source code. Rather than forming normal paragraphs, the lines\nof a code block are interpreted literally. Markdown wraps a code block\nin both <code class=\"language-text\">&lt;pre&gt;</code> and <code class=\"language-text\">&lt;code&gt;</code> tags.</p>\n<p>To produce a code block in Markdown, simply indent every line of the\nblock by at least 4 spaces or 1 tab.</p>\n<p>This is a normal paragraph:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">This is a code block.</code></pre></div>\n<p>Here is an example of AppleScript:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">tell application &quot;Foo&quot;\n    beep\nend tell</code></pre></div>\n<p>A code block continues until it reaches a line that is not indented\n(or the end of the article).</p>\n<p>Within a code block, ampersands (<code class=\"language-text\">&amp;</code>) and angle brackets (<code class=\"language-text\">&lt;</code> and <code class=\"language-text\">&gt;</code>)\nare automatically converted into HTML entities. This makes it very\neasy to include example HTML source code using Markdown -- just paste\nit and indent it, and Markdown will handle the hassle of encoding the\nampersands and angle brackets. For example, this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;div class=&quot;footer&quot;&gt;\n    &amp;copy; 2004 Foo Corporation\n&lt;/div&gt;</code></pre></div>\n<p>Regular Markdown syntax is not processed within code blocks. E.g.,\nasterisks are just literal asterisks within a code block. This means\nit's also easy to use Markdown to write about Markdown's own syntax.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">tell application &quot;Foo&quot;\n    beep\nend tell</code></pre></div>\n<h2>Span Elements</h2>\n<h3>Links</h3>\n<p>Markdown supports two style of links: <em>inline</em> and <em>reference</em>.</p>\n<p>In both styles, the link text is delimited by [square brackets].</p>\n<p>To create an inline link, use a set of regular parentheses immediately\nafter the link text's closing square bracket. Inside the parentheses,\nput the URL where you want the link to point, along with an <em>optional</em>\ntitle for the link, surrounded in quotes. For example:</p>\n<p>This is <a href=\"http://example.com/\" target=\"_blank\" rel=\"noopener noreferrer\">an example</a> inline link.</p>\n<p><a href=\"http://example.net/\" target=\"_blank\" rel=\"noopener noreferrer\">This link</a> has no title attribute.</p>\n<h3>Emphasis</h3>\n<p>Markdown treats asterisks (<code class=\"language-text\">*</code>) and underscores (<code class=\"language-text\">_</code>) as indicators of\nemphasis. Text wrapped with one <code class=\"language-text\">*</code> or <code class=\"language-text\">_</code> will be wrapped with an\nHTML <code class=\"language-text\">&lt;em&gt;</code> tag; double <code class=\"language-text\">*</code>'s or <code class=\"language-text\">_</code>'s will be wrapped with an HTML\n<code class=\"language-text\">&lt;strong&gt;</code> tag. E.g., this input:</p>\n<p><em>single asterisks</em></p>\n<p><em>single underscores</em></p>\n<p><strong>double asterisks</strong></p>\n<p><strong>double underscores</strong></p>\n<h3>Code</h3>\n<p>To indicate a span of code, wrap it with backtick quotes (<code class=\"language-text\">`</code>).\nUnlike a pre-formatted code block, a code span indicates code within a\nnormal paragraph. For example:</p>\n<p>Use the <code class=\"language-text\">printf()</code> function.</p>","id":"a1ca9d53-0d27-51db-a8f8-6d447595ac11","fields":{"slug":"/posts/2018-5-31-md-test/"},"frontmatter":{"date":"2018-05-31T23:27:33.962Z","path":"/md-test","title":"Markdown Support Test","description":null,"tags":["programming","markdown"]}}},"next":{"node":{"excerpt":"Does that title sound familiar?This video might jog your memoryIf you've ever been on YouTube, chances are that you have seen some \"affluencers\" try to pitch you their \"get rich quick\" scheme in the first 5 seconds before you skip the ad. It'sâ€¦","html":"<p>Does that title sound familiar?</p>\n<p><a href=\"https://youtu.be/yMha6kJZmrw\" target=\"_blank\" rel=\"noopener noreferrer\">This video might jog your memory</a></p>\n<p>If you've ever been on YouTube, chances are that you have seen some \"affluencers\" try to pitch you their \"get rich quick\" scheme in the first 5 seconds before you skip the ad. It's probably of some guy standing in his mansion holding an expo marker with illegible scribbles written on an Easel Pad with various arrows and dollar signs scattered throughout what supposedly is the next big thing. </p>\n<p><img src=\"https://pbs.twimg.com/media/CMaUfyPWIAAtQ-E.jpg\" alt=\"Straight out of his Garage\" title=\"Peep his garage\"></p>\n<p>At this point, you probably know the different entrepreneurs that I am referring to: Tai Lopez, Grant Cardone, and Alex Becker. This is no way meant to call them out on anything, but with the recent increase in the number of people who have joined them in promoting their marketing training programs, it seems that something that they are doing is correct. But of course, this could really just be an isolated incident where YouTube has been targeting me based on watch history, but I dispelled this notion after hearing about the same encounters from my friends.</p>\n<p>In short, the one thing that these three have in common is that they all offer some sort of training that will allow people to become successful in starting and boosting their online sales, whether if it is managing social media accounts for small businesses or using Shopify to sell trending items. All 3 of them preach the idea of <em>hustling</em> to work towards not only building a successful business but also a successful life.</p>\n<p><img src=\"https://i.kym-cdn.com/photos/images/original/001/409/466/16a.png\" alt=\"Let&#x27;s get this bread\"></p>\n<p>After looking more into them, there seems to be a sizable portion that just hates their content -- calling them \"scams\" or that their wealth merely consists of a rented mansion, Lamborghinis, and private jets. The one thing that popped into my mind was how successful these guys are at getting publicity and there are certain things that I've noticed that make their ads so appealing. </p>\n<h3>The Hooks</h3>\n<p>Now there are several somewhat effective tactics that these guys love to use in order to draw in as many viewers as they can. As with all their ads, the first 5 seconds is crucial in order to get viewers engaged since most of them are long enough that they can be skipped. The old way that marketers usually would start their ad is to discourage the viewer from skipping, but this has gotten less and less as it was completely overused, clichÃ©, and ineffective. Instead, a more clever tactic is needed to hook viewers in: through results.</p>\n<p>I think we can all agree that people love to see results. They serve as great indicators for when something is going right or going wrong. When one sees others succeeding in some job, one can't help but wonder if they can accomplish just the same -- if not better. This, in essence, is exactly what these YouTube ads show. It could be Tai Lopez strolling down the street with one of his successful mentees in London talking about partnerships with \"major brands\" or Alex Becker scrolling down his Facebook page to show someone with $18k in sales in the last month with his Shopify store. Within the first 5 seconds, you are shown expensive cars and amazing sales figures to create an investment on your end to find out more about how they achieved them. A few minutes later, you realize you just <strong>sat through an entire YouTube ad</strong>.</p>\n<p>The second major theme that all three notably share is the somewhat low production value that their ads have. Keep in mind, all three of them have enough money to hire a professional camera crew with the best equipment around. However, the fact that they just use an iPhone, go unscripted and keep it as much as a conversation with you as possible. This allows them to connect with you not as a salesman, but as a regular person with no hidden motives. With a professional looking advertisement and expected punch lines of \"limited time only\" or \"join millions of others who became rich\",  many would be quick to label it as an annoying ad and quickly dismiss it. Grant Cardone realized this a while back and switched from his more formal video styles from 2010 to an off-script one which yielded a lot more views.</p>\n<p>The third major theme is the continuous action that takes place in the background. This is probably more notable in Tai's videos but they sometimes are used in Grant's videos as well. Tai typically starts recording after he has done something, whether if it is walking through his garage, after a jog, or even after his meetings. He continuously moves through whatever environment he is in -- which is a masterful technique in keeping the person's attention.</p>\n<h3>Can Goldfish Pay Attention?</h3>\n<p>As an aside, it is important to note that the pace of films today is much faster than when Alfred Hitchcock's <em>Psycho</em> first came out in 1960. According to Mike Feurstein writeup in <em>Filmmaker Magazine</em> [2], much of the content on the web today \"demands attention spans shorter than most goldfish\". This is evident in the rise (and fall) of video apps like Vine and Tiktok. Of course there are some exceptions where films do not follow the traditional pace of filming back then, but for the most part, much of these films featured many still shots of people, landscapes, etc. For example, Sergio Leone loved including long takes of the surrounding landscape <em>The Good, the Bad, and the Ugly</em> to evince the rugged landscape that the movie takes place in.</p>\n<p>This is in stark contrast with the fast-paced riffs of pop culture that exist today mainly on the web. Popular videos are often quite short, funny, and stimulating to keep viewers engaged overall --- and making them return for more [1].  Although the people I refer to don't make funny videos, they successfully apply the same principles that allow their content to be heavily shared, in addition to the promotional campaigns that they run.</p>\n<p>A brief search for some of Grant's older videos reveals the disparity between his older content and his new ones. In his newer videos, quite a few of them were able to surpass the 1 million view mark which had more camera movements, shaky hands, and more amateurish overall compared to his still and professional videos from almost a decade ago. This not to say that all of his videos surpass the 1 million mark easily. But for the ones that do, this is a common trait that they all share. Even though these videos do last longer than just a few minutes sometimes, the constant movement with things going on in the background acts as an illusion that stimulates the brain into paying more attention. This is an extremely powerful tactic in a medium where everyone is vying for your attention.</p>\n<h3>In Sum</h3>\n<p>For months, I've always found myself watching through to the end of some of their ads -- more than I'd like to admit. There are quite a few people who have also done an analysis on the way these guys market themselves and how effective it really is. These are some of the things that I think that they are doing correctly in terms of engaging even the most discerning of viewers. It is possible that I am giving them more credit than they actually deserve and all these different \"tactics\" are just a mere coincidence, but one cannot argue that this is a consistent pattern that is seen in a lot of their videos.</p>\n<h2>References</h2>\n<ol>\n<li><a href=\"https://nofilmschool.com/2012/11/attention-deficit-audiences-new-media-filmmaking\" target=\"_blank\" rel=\"noopener noreferrer\">Attention-Deficit Audiences and How New Media Might Be Affecting Traditional Filmmaking</a></li>\n<li><a href=\"https://filmmakermagazine.com/58685-spanned-attentions/\" target=\"_blank\" rel=\"noopener noreferrer\">Spanned Attentions</a></li>\n</ol>","id":"31bab20c-db99-504f-b379-a8699c372153","fields":{"slug":"/posts/2019-2-23-here-in-my-garage/"},"frontmatter":{"date":"2019-02-23T11:34:17.948Z","path":"/here-in-my-garage","title":"here in my garage","description":null,"tags":["entrpreneurship","ads","videos","cinematography"]}}}}}}